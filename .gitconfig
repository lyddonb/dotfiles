[user]
    email = lyddonb@gmail.com
    name = Beau Lyddon
[github]
    user = lyddonb
[core]
    excludesfile = ~/.gitignore_global
    editor = /usr/bin/vim
    # Treat spaces before tabs, lines that are indented with 8 or more spaces, 
    # and all kinds of trailing whitespace as an error
    whitespacece = space-before-tab,indent-with-non-tab,trailing-space
[alias]
    gl  = log -16 --color=always --all --graph --topo-order --pretty='format: %Cgreen%h%Creset %s%Cred%d%Creset%n'
    gll = log     --color=always --all --graph --topo-order --pretty='format: %Cgreen%h%Creset %s%Cred%d%Creset%n'

    ci = commit
    cm = commit -m

    co = checkout
    com = checkout master

    stat = status
    st = status

    fo = fetch origin
    fu = fetch upstream
    po = push origin
    lo = pull origin

    # Divergence (commits we added and commits remote added)
    div = divergence
    
    # Goodness (summary of diff lines added/removed/total)
    gn = goodness
    gnc = goodness --cached

    # Fancy logging.
    #   h = head
    #   hp = head with patch
    #   r = recent commits, only current branch
    #   ra = recent commits, all reachable refs
    #   l = all commits, only current branch
    #   la = all commits, all reachable refs
    head = !git l -1
    h = !git head
    hp = "!source ~/.githelpers && show_git_head"
    r = !git l -30
    ra = !git r --all
    l = "!source ~/.githelpers && pretty_git_log"
    la = !git l --all

    lme = log --author='Beau Lyddon' --no-merges

    lt = latest
    lb = for-each-ref --sort=-committerdate refs/heads/ --format='%(objectname) %(refname:short)'
    cpc = "sh -c 'git commit \"$@\" && git rev-parse HEAD | xsel --clipboard'"

    sy = log --since yesterday --author='Beau Lyddon'¬
    purr = pull --rebase¬
    ready = rebase -i @{u}¬
    ours   = "!f() { git checkout --ours $@ && git add $@; }; f"¬
    theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"¬

    assume   = update-index --assume-unchanged¬
    unassume = update-index --no-assume-unchanged¬
    assumed  = "!git ls-files -v | grep ^h | cut -c 3-"¬
[push]
	default = tracking
[fetch]
    recurseSubmodules = yes
[color]
    ui = auto
    branch = auto
    diff = auto
    interactive = auto
    status = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    old = red bold
    new = green bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[diff]
    tool = vimdiff
[difftool "sourcetree"]
	cmd = /Applications/DiffMerge.app/Contents/MacOS/DiffMerge --nosplash \"$LOCAL\" \"$REMOTE\"
	path = 
[difftool "pycharm"]
	cmd = /Applications/PyCharm.app/Contents/MacOS/PyCharm  \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/DiffMerge.app/Contents/MacOS/DiffMerge --merge --result=\"$MERGED\" \"$LOCAL\" \"$BASE\" \"$REMOTE\"
	trustExitCode = true
[merge]
    # Include summaries of merged commits in newly created mergedge commit
    # messages
    tool = sourcetree
    log = true
[branch]
    autosetuprebase = always
